---
version: 1.0
root: "./.results/output/"  # Store all temporary artifacts inside ./results folder
timeout: 7200 # timeout for cloudtest
shuffle-enabled: true
statistics:
  enabled: true   # Allow to print statistics
  interval: 30    # with 30 seconds interval

providers:
  - name: "kind-1"    # A name of our provider
    kind: "shell"   # A type of provider, shell indicate we need to specify all operations with shell commands.
    instances: 1    # We need to have 1 instance of cloud.
    node-count: 0   # With 0 nodes
    retry: 1  # A retry count if cloud is failed to start tool will try again.
    enabled: true   # Indicate Provider is active with config by default, if set to false, values could be overriden using command line arguments.
    timeout: 3600    # 3600 seconds timeout to start a cluster.
    env:
      - KIND_CLUSTER_NAME=kind-1   # Generate a uniq cluster name
      - CONFIG_LOCATION=$(tempdir)/config             # Put Kubernetes configuration file here, $(tempdir) a executable variable name pointing to temporary folder.
    scripts:
      start: make kind-start                    # Use make file to cluster
      config: make kind-export-kubeconfig       # Use make file to generate kind config and put it into a file specified with CONFIG_LOCATION environment variable.
      stop: make kind-stop                      # Use make file to stop kind- kind delete cluster
      prepare: |                                # Commands to prepare k8s cluster nodes after they have come up, get pods, install components using smm-cli
        kubectl get pods -A --kubeconfig=${CONFIG_LOCATION}
  - name: "kind-2"    # A name of our provider
    kind: "shell"   # A type of provider, shell indicate we need to specify all operations with shell commands.
    instances: 1    # We need to have 1 instance of cloud.
    node-count: 0   # With 0 nodes
    retry: 1  # A retry count if cloud is failed to start tool will try again.
    enabled: true   # Indicate Provider is active with config by default, if set to false, values could be overriden using command line arguments.
    timeout: 3600    # 3600 seconds timeout to start a cluster.
    env:
      - KIND_CLUSTER_NAME=kind-2   # Generate a uniq cluster name
      - CONFIG_LOCATION=$(tempdir)/config             # Put Kubernetes configuration file here, $(tempdir) a executable variable name pointing to temporary folder.
    scripts:
      start: make kind-start                    # Use make file to cluster
      config: make kind-export-kubeconfig       # Use make file to generate kind config and put it into a file specified with CONFIG_LOCATION environment variable.
      stop: make kind-stop                      # Use make file to stop kind- kind delete cluster
      prepare: |                                # Commands to prepare k8s cluster nodes after they have come up, get pods, install components using smm-cli
        kubectl get pods -A --kubeconfig=${CONFIG_LOCATION}
reporting:
  junit-report: "./test_results/junit.xml"    # Put junit xml report into this file.
executions:
  - name: "Test Suite 1GG"    # Name of execution configuration
    env:
      - MY_ENV_VAR="test"   # Put sample environment variable.
      - ARTIFACTS_ARCHIVE=true
      - STORE_POD_LOGS_IN_FILES=true
    root: ./tests/          # A root where to find tests
    timeout: 360             # Timeout for execution configuration
    cluster-count: 2        # A number of clusters requires for this execution.
    cluster-selector:
      - kind-1
      - kind-2
    cluster-env:
      - KUBECONFIG1
      - KUBECONFIG2          # A name of cluster configuration variable to be passed with name.
    on-fail: |
      echo "Do cleanup on failure"  # Todo- In case of execution failure this script will cleanup after test
